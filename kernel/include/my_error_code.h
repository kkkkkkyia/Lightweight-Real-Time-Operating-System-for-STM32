#ifndef MY_ERROR_CODE_H
#define MY_ERROR_CODE_H

typedef enum _MY_ErrorCode {
	MY_SUCCESS = 0,
	MY_NULL_POINTER,
	MY_TASK_PRIO_OUT_OF_RANGE,
	MY_NOT_ENOUGH_MEM_FOR_TASK_CREATE,
	MY_YIELD_IN_INTR_CONTEXT,
	MY_YIELD_IN_SCH_SUSPEND,
	MY_TSK_DLY_IN_INTR_CONTEXT,
	MY_TSK_DLY_IN_SCH_SUSPEND,
	MY_TSK_DLY_TICK_INVALID,
	MY_TSK_SUSPEND_IN_SUSPENDING,
	MY_SUSPEND_CUR_TSK_IN_INTR,
	MY_SUSPEND_CUR_TSK_IN_SCH_SUSPEND,
	MY_RESUME_CUR_TSK,
	MY_RESUME_TSK_NOT_IN_SUSPEND,
	MY_SET_SAME_PRIO,
	MY_NOT_ENOUGH_SEM_RESOURCE,
	MY_SEM_GET_IN_INTR_CONTEXT,
	MY_SEM_GET_IN_SCH_SUSPEND,
	MY_SEM_RELEASE_IN_INTR_CONTEXT,
	MY_SEM_RELEASE_IN_SCH_SUSPEND,
	MY_SEM_INVALID_TIMEOUT,
	MY_SEM_NOT_BEEN_CREATED,
	MY_SEM_HANDLE_INVALID,
	MY_SEM_TRY_GET_FAILED,
	MY_SEM_GET_TIMEOUT,
	MY_SEM_OVERFLOW,
	MY_MUTEX_HANDLE_INVALID,
	MY_MUTEX_NOT_BEEN_CREATED,
	MY_NOT_ENOUGH_MUTEX_RESOURCE,
	MY_USE_MUTEX_IN_INTR_CONTEXT,
	MY_USE_MUTEX_IN_SCH_SUSPEND,
	MY_TRY_MUTEX_LOCK_FAILED,
	MY_MUTEX_WAIT_TIMEOUT,
	MY_MUTEX_INVALID_TIMEOUT,
	MY_MUTEX_UNLOCK_INVALID,
	MY_MUTEX_UNLOCK_NOT_OWNER,
	MY_MUTEX_DESTORY_IN_NO_EMPTY,
	MY_MUTEX_DESTORY_IN_OWNER_USING,
	MY_QUEUE_HANDLE_INVALID,
	MY_QUEUE_NOT_BEEN_CREATED,
	MY_NOT_ENOUGH_QUEUE_RESOURCE,
	MY_QUEUE_CREATE_INVALID_PARAM,
	MY_NOT_ENOUGH_MEM_FOR_QUEUE_CREATE,
	MY_QUEUE_WR_DATA_TOO_BIG,
	MY_QUEUE_TRY_WR_FAILED,
	MY_QUEUE_WR_FULL_IN_INTR_CONTEXT,
	MY_QUEUE_WR_FULL_IN_SCH_SUSPEND,
	MY_QUEUE_WR_WAIT_TIMEOUT,
	MY_QUEUE_RD_DATA_TOO_BIG,
	MY_QUEUE_TRY_RD_FAILED,
	MY_QUEUE_RD_EMPTY_IN_INTR_CONTEXT,
	MY_QUEUE_RD_EMPTY_IN_SCH_SUSPEND,
	MY_QUEUE_RD_WAIT_TIMEOUT,
	MY_QUEUE_DESTORY_WR_SLP,
	MY_QUEUE_DESTORY_RD_SLP,
	MY_QUEUE_DESTORY_QUEUE_NOT_EMPTY,
	MY_NOT_ENOUGH_TMR_RESOURCE,
	MY_TMR_INVALID_MODE,
	MY_TMR_INVALID_INTERVAL,
	MY_TIMER_HANDLE_INVALID,
	MY_TIMER_NOT_BEEN_CREATED,
	MY_TIMER_ALREADY_RUNNING,
	MY_TIMER_NOT_RUNNING,
	MY_TIMER_NOT_STOPPED,
} My_ErrorCode_e;

#define MY_CHECK_RETURN(Ret)                \
{                                           \
    if(Ret != MY_SUCCESS)                   \
        return Ret;                         \
}

#define MY_CHECK_NULL_POINTER(Pointer)      \
{                                           \
    if (Pointer == MY_NULL)                 \
        return MY_NULL_POINTER;             \
}

#endif // !MY_ERROR_CODE_H
